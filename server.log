
> qiming-star-prototype@0.1.0 dev
> next dev

 ⚠ Port 3000 is in use by process 13528, using available port 3001 instead.
   ▲ Next.js 15.5.0
   - Local:        http://localhost:3001
   - Network:      http://192.168.146.13:3001
   - Environments: .env.local

 ✓ Starting...
 ✓ Ready in 3.6s
 ○ Compiling /api/ai-chat ...
 ✓ Compiled /api/ai-chat in 986ms (299 modules)
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: '����AI��Ӧ', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '����AI��Ӧ',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:29:25.195Z' }
}
📊 N8N响应状态: 200
📥 N8N响应数据: { responds: '{{json.output}}' }
🔍 解析N8N响应: { responds: '{{json.output}}' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 10702ms
 ✓ Compiled in 245ms (104 modules)
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 973ms (716 modules)
 POST /api/ai-chat 404 in 1429ms
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: 'Hello', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: 'Hello',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:37:07.684Z' }
}
📊 N8N响应状态: 200
N8N webhook调用异常: SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:116:20)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  114 |       }
  115 |
> 116 |       const data = await response.json()
      |                    ^
  117 |       console.log('📥 N8N响应数据:', data)
  118 |       
  119 |       return this.parseN8nResponse(data)
AI服务请求失败: SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:116:20)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  114 |       }
  115 |
> 116 |       const data = await response.json()
      |                    ^
  117 |       console.log('📥 N8N响应数据:', data)
  118 |       
  119 |       return this.parseN8nResponse(data)
❌ AI Chat API 错误: SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:116:20)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  114 |       }
  115 |
> 116 |       const data = await response.json()
      |                    ^
  117 |       console.log('📥 N8N响应数据:', data)
  118 |       
  119 |       return this.parseN8nResponse(data)
 POST /api/ai-chat 500 in 7647ms
 ✓ Compiled in 1769ms (412 modules)
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: '���', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '���',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:37:42.479Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 10779ms
 GET /api/ai-chat 405 in 27ms
 ✓ Compiled / in 298ms (720 modules)
 GET / 200 in 628ms
 ○ Compiling /login ...
 ✓ Compiled /login in 550ms (770 modules)
 GET /login 200 in 721ms
 ○ Compiling /dashboard/student ...
 ✓ Compiled /dashboard/student in 628ms (1026 modules)
 GET /dashboard/student 200 in 730ms
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: '你好', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '你好',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:39:56.236Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 5668ms
 GET /dashboard/student 200 in 252ms
 GET /dashboard/student 200 in 56ms
 GET / 200 in 49ms
 GET /login 200 in 50ms
 GET /dashboard/student 200 in 27ms
🚀 AI Chat API 被调用
📤 收到请求: { message: '23', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '23',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:42:53.351Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 9432ms
 GET /dashboard/student 200 in 66ms
 ○ Compiling /dashboard ...
 ✓ Compiled /dashboard in 507ms (1007 modules)
 GET /dashboard 200 in 816ms
 GET /login 200 in 36ms
 GET /dashboard/student 200 in 46ms
 ✓ Compiled /api/ai-chat in 221ms (576 modules)
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: '你好呀', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '你好呀',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:49:12.390Z' }
}
N8N webhook调用异常: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.89.135.118:443, 47.89.186.110:443, 47.90.209.144:443, 47.253.35.19:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
AI服务请求失败: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.89.135.118:443, 47.89.186.110:443, 47.90.209.144:443, 47.253.35.19:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
❌ AI Chat API 错误: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.89.135.118:443, 47.89.186.110:443, 47.90.209.144:443, 47.253.35.19:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 POST /api/ai-chat 500 in 11216ms
 GET /dashboard/student?tab=okr 200 in 90ms
 GET /dashboard 200 in 31ms
 GET /dashboard/student 200 in 44ms
 GET /dashboard/student 200 in 31ms
 GET /dashboard 200 in 29ms
 GET /dashboard/student 200 in 38ms
 GET /dashboard/student 200 in 35ms
 GET /dashboard 200 in 31ms
 GET /dashboard/student 200 in 36ms
 GET /dashboard/student 200 in 30ms
 GET /dashboard/student 200 in 264ms
 ✓ Compiled / in 218ms (560 modules)
 GET / 200 in 557ms
 GET /login 200 in 61ms
 GET /login 200 in 85ms
 GET /dashboard/student 200 in 45ms
 ✓ Compiled /api/ai-chat in 245ms (581 modules)
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: '你好', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '你好',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:51:35.851Z' }
}
N8N webhook调用异常: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.253.35.19:443, 47.89.135.118:443, 47.89.186.110:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
AI服务请求失败: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.253.35.19:443, 47.89.135.118:443, 47.89.186.110:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
❌ AI Chat API 错误: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.253.35.19:443, 47.89.135.118:443, 47.89.186.110:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 POST /api/ai-chat 500 in 11253ms
 GET /dashboard 200 in 70ms
 GET /dashboard/student 200 in 61ms
 GET /dashboard/student 200 in 31ms
 GET / 200 in 144ms
 GET /login 200 in 53ms
 GET /dashboard/student 200 in 24ms
🚀 AI Chat API 被调用
📤 收到请求: { message: 'hello', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: 'hello',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:53:20.596Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 10293ms
 GET / 200 in 56ms
 GET /login 200 in 36ms
 GET /dashboard/student 200 in 25ms
🚀 AI Chat API 被调用
📤 收到请求: { message: 'hello', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: 'hello',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T12:55:05.194Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 9797ms
 GET /dashboard/student 200 in 117ms
 GET /login 200 in 42ms
 GET /login 200 in 38ms
 GET /dashboard/student 200 in 31ms
🚀 AI Chat API 被调用
📤 收到请求: { message: '123456', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '123456',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:06:29.977Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 9870ms
 GET /dashboard/student 200 in 68ms
 GET /dashboard/student 200 in 61ms
 GET / 200 in 47ms
 GET /login 200 in 44ms
 GET /dashboard/student 200 in 25ms
🚀 AI Chat API 被调用
📤 收到请求: { message: '123456', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '123456',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:09:29.701Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: 
⚠️ N8N响应不是JSON格式，直接使用文本内容
🔍 解析N8N响应: { response: '' }
✅ 解析出的AI回复: 抱歉，AI服务暂时不可用，请稍后再试。
✅ AI响应成功: 抱歉，AI服务暂时不可用，请稍后再试。
 POST /api/ai-chat 200 in 8840ms
 GET /dashboard/student 200 in 55ms
 GET /login 200 in 75ms
 GET /login 200 in 36ms
 GET /dashboard/student 200 in 25ms
🚀 AI Chat API 被调用
📤 收到请求: { message: 'niaho', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: 'niaho',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:12:43.021Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: {"responds":"你好！我是启明星，你的专属AI学习助手。很高兴能与你交流！\n\n我在这里，就是为了帮助你更好地制定和完成学习目标（OKR），让你的学习之路更清晰、更高效。当然，如果你有任何学习上的知识疑问，也随时可以问我，我都很乐意为你解答。\n\n那么，你现在有什么需要我帮忙的吗？或者想从哪里开始呢？"}
📥 N8N解析后数据: {
  responds: '你好！我是启明星，你的专属AI学习助手。很高兴能与你交流！\n' +
    '\n' +
    '我在这里，就是为了帮助你更好地制定和完成学习目标（OKR），让你的学习之路更清晰、更高效。当然，如果你有任何学习上的知识疑问，也随时可以问我，我都很乐意为你解答。\n' +
    '\n' +
    '那么，你现在有什么需要我帮忙的吗？或者想从哪里开始呢？'
}
🔍 解析N8N响应: {
  responds: '你好！我是启明星，你的专属AI学习助手。很高兴能与你交流！\n' +
    '\n' +
    '我在这里，就是为了帮助你更好地制定和完成学习目标（OKR），让你的学习之路更清晰、更高效。当然，如果你有任何学习上的知识疑问，也随时可以问我，我都很乐意为你解答。\n' +
    '\n' +
    '那么，你现在有什么需要我帮忙的吗？或者想从哪里开始呢？'
}
✅ 解析出的AI回复: 你好！我是启明星，你的专属AI学习助手。很高兴能与你交流！

我在这里，就是为了帮助你更好地制定和完成学习目标（OKR），让你的学习之路更清晰、更高效。当然，如果你有任何学习上的知识疑问，也随时可以问我，我都很乐意为你解答。

那么，你现在有什么需要我帮忙的吗？或者想从哪里开始呢？
✅ AI响应成功: 你好！我是启明星，你的专属AI学习助手。很高兴能与你交流！

我在这里，就是为了帮助你更好地制定和完成学习目标（OKR），让你的学习之路更清晰、更高效。当然，如果你有任何学习上的知识疑问，也随时可以问我，我都很乐意为你解答。

那么，你现在有什么需要我帮忙的吗？或者想从哪里开始呢？
 POST /api/ai-chat 200 in 9263ms
🚀 AI Chat API 被调用
📤 收到请求: { message: '我想指导怎么定制我的OKR', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '我想指导怎么定制我的OKR',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [
    {
      role: 'user',
      content: 'niaho',
      timestamp: '2025-08-27T13:12:43.008Z'
    },
    {
      role: 'assistant',
      content: '你好！我是启明星，你的专属AI学习助手。很高兴能与你交流！\n' +
        '\n' +
        '我在这里，就是为了帮助你更好地制定和完成学习目标（OKR），让你的学习之路更清晰、更高效。当然，如果你有任何学习上的知识疑问，也随时可以问我，我都很乐意为你解答。\n' +
        '\n' +
        '那么，你现在有什么需要我帮忙的吗？或者想从哪里开始呢？',
      timestamp: '2025-08-27T13:12:52.275Z'
    }
  ],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:13:13.165Z' }
}
📊 N8N响应状态: 200
📥 N8N原始响应: {"responds":"你好！我是启明星，很高兴能帮你开始制定你的学习OKR。\n\n制定OKR（目标与关键结果）是提升学习效率和达成学习目标的绝佳方式！它能帮你清晰地规划学习路径。\n\n我们可以一步步来。下面是制定OKR的核心步骤，我会引导你完成：\n\n### 启明星的OKR定制指南\n\n1.  **确定你的“目标”（Objective - O）**\n    *   **这是什么？** 你最想在接下来一段时间（比如一个学期、一个月或一个项目周期）内达成的、具有挑战性且鼓舞人心的目标。它应该是一个定性的描述，明确指明方向。\n    *   **思考一下：**\n        *   “你最想在这段时间内，在哪个学科、哪项技能或哪个领域取得显著的突破？”\n        *   “你希望自己达到一个什么样的状态？”\n    *   **例如：** “深入掌握高中物理力学模块。” 或 “流利地用英语进行日常对话。”\n\n2.  **设定“关键结果”（Key Results - KR）**\n    *   **这是什么？** 衡量你的“目标”是否达成的具体、可量化的结果。每个Objective通常有2-5个KR。KR必须是数字或可明确判断的成果，而不是一个任务列表。\n    *   **思考一下：**\n        *   “你将如何衡量你的目标是否达成？”\n        *   “哪些具体的数据、百分比或完成事项能证明你实现了你的Objective？”\n        *   这些KR应该是有挑战性但又可能实现的。\n    *   **例如（针对“深入掌握高中物理力学模块”）：**\n        *   KR1：完成50道高考真题并正确率达到90%以上。\n        *   KR2：能够独立向同学清晰讲解所有力学核心概念。\n        *   KR3：在期末考试中，力学部分得分率达到95%以上。\n    *   **例如（针对“流利地用英语进行日常对话”）：**\n        *   KR1：每周参加3次英语角或线上交流，每次发言时间不低于10分钟。\n        *   KR2：能够不卡顿地用英语完整讲述3个日常主题（如介绍家乡、未来规划、旅行经历）。\n        *   KR3：掌握并熟练运用至少200个日常对话常用短语和句型。\n\n3.  **制定行动计划（为了实现KR的具体任务）**\n    *   虽然OKR本身侧重目标和结果，但为了达成KR，我们还需要具体的行动。\n    *   **思考一下：**\n        *   “为了达成你的每个KR，你每天/每周需要做些什么具体的练习或学习任务？”\n    *   **例如（针对物理KR1：完成50道高考真题并正确率达到90%以上）：**\n        *   每天完成5道真题，并详细分析错题。\n        *   每周至少进行一次专题复习，整理知识点和解题技巧。\n\n4.  **定期回顾与调整**\n    *   OKR不是一成不变的，你需要定期（比如每周或每两周）检查进度，评估KR的完成情况。\n    *   如果发现某些KR太难或太简单，可以灵活调整。\n\n---\n\n为了更好地帮助你，我们先从你的**“目标”（Objective）**开始吧！\n\n**你现在最想在哪方面取得突破呢？你想在这段时间内实现一个什么样的学习目标？**\n\n请告诉我你的想法，我来帮你完善！"}
📥 N8N解析后数据: {
  responds: '你好！我是启明星，很高兴能帮你开始制定你的学习OKR。\n' +
    '\n' +
    '制定OKR（目标与关键结果）是提升学习效率和达成学习目标的绝佳方式！它能帮你清晰地规划学习路径。\n' +
    '\n' +
    '我们可以一步步来。下面是制定OKR的核心步骤，我会引导你完成：\n' +
    '\n' +
    '### 启明星的OKR定制指南\n' +
    '\n' +
    '1.  **确定你的“目标”（Objective - O）**\n' +
    '    *   **这是什么？** 你最想在接下来一段时间（比如一个学期、一个月或一个项目周期）内达成的、具有挑战性且鼓舞人心的目标。它应该是一个定性的描述，明确指明方向。\n' +
    '    *   **思考一下：**\n' +
    '        *   “你最想在这段时间内，在哪个学科、哪项技能或哪个领域取得显著的突破？”\n' +
    '        *   “你希望自己达到一个什么样的状态？”\n' +
    '    *   **例如：** “深入掌握高中物理力学模块。” 或 “流利地用英语进行日常对话。”\n' +
    '\n' +
    '2.  **设定“关键结果”（Key Results - KR）**\n' +
    '    *   **这是什么？** 衡量你的“目标”是否达成的具体、可量化的结果。每个Objective通常有2-5个KR。KR必须是数字或可明确判断的成果，而不是一个任务列表。\n' +
    '    *   **思考一下：**\n' +
    '        *   “你将如何衡量你的目标是否达成？”\n' +
    '        *   “哪些具体的数据、百分比或完成事项能证明你实现了你的Objective？”\n' +
    '        *   这些KR应该是有挑战性但又可能实现的。\n' +
    '    *   **例如（针对“深入掌握高中物理力学模块”）：**\n' +
    '        *   KR1：完成50道高考真题并正确率达到90%以上。\n' +
    '        *   KR2：能够独立向同学清晰讲解所有力学核心概念。\n' +
    '        *   KR3：在期末考试中，力学部分得分率达到95%以上。\n' +
    '    *   **例如（针对“流利地用英语进行日常对话”）：**\n' +
    '        *   KR1：每周参加3次英语角或线上交流，每次发言时间不低于10分钟。\n' +
    '        *   KR2：能够不卡顿地用英语完整讲述3个日常主题（如介绍家乡、未来规划、旅行经历）。\n' +
    '        *   KR3：掌握并熟练运用至少200个日常对话常用短语和句型。\n' +
    '\n' +
    '3.  **制定行动计划（为了实现KR的具体任务）**\n' +
    '    *   虽然OKR本身侧重目标和结果，但为了达成KR，我们还需要具体的行动。\n' +
    '    *   **思考一下：**\n' +
    '        *   “为了达成你的每个KR，你每天/每周需要做些什么具体的练习或学习任务？”\n' +
    '    *   **例如（针对物理KR1：完成50道高考真题并正确率达到90%以上）：**\n' +
    '        *   每天完成5道真题，并详细分析错题。\n' +
    '        *   每周至少进行一次专题复习，整理知识点和解题技巧。\n' +
    '\n' +
    '4.  **定期回顾与调整**\n' +
    '    *   OKR不是一成不变的，你需要定期（比如每周或每两周）检查进度，评估KR的完成情况。\n' +
    '    *   如果发现某些KR太难或太简单，可以灵活调整。\n' +
    '\n' +
    '---\n' +
    '\n' +
    '为了更好地帮助你，我们先从你的**“目标”（Objective）**开始吧！\n' +
    '\n' +
    '**你现在最想在哪方面取得突破呢？你想在这段时间内实现一个什么样的学习目标？**\n' +
    '\n' +
    '请告诉我你的想法，我来帮你完善！'
}
🔍 解析N8N响应: {
  responds: '你好！我是启明星，很高兴能帮你开始制定你的学习OKR。\n' +
    '\n' +
    '制定OKR（目标与关键结果）是提升学习效率和达成学习目标的绝佳方式！它能帮你清晰地规划学习路径。\n' +
    '\n' +
    '我们可以一步步来。下面是制定OKR的核心步骤，我会引导你完成：\n' +
    '\n' +
    '### 启明星的OKR定制指南\n' +
    '\n' +
    '1.  **确定你的“目标”（Objective - O）**\n' +
    '    *   **这是什么？** 你最想在接下来一段时间（比如一个学期、一个月或一个项目周期）内达成的、具有挑战性且鼓舞人心的目标。它应该是一个定性的描述，明确指明方向。\n' +
    '    *   **思考一下：**\n' +
    '        *   “你最想在这段时间内，在哪个学科、哪项技能或哪个领域取得显著的突破？”\n' +
    '        *   “你希望自己达到一个什么样的状态？”\n' +
    '    *   **例如：** “深入掌握高中物理力学模块。” 或 “流利地用英语进行日常对话。”\n' +
    '\n' +
    '2.  **设定“关键结果”（Key Results - KR）**\n' +
    '    *   **这是什么？** 衡量你的“目标”是否达成的具体、可量化的结果。每个Objective通常有2-5个KR。KR必须是数字或可明确判断的成果，而不是一个任务列表。\n' +
    '    *   **思考一下：**\n' +
    '        *   “你将如何衡量你的目标是否达成？”\n' +
    '        *   “哪些具体的数据、百分比或完成事项能证明你实现了你的Objective？”\n' +
    '        *   这些KR应该是有挑战性但又可能实现的。\n' +
    '    *   **例如（针对“深入掌握高中物理力学模块”）：**\n' +
    '        *   KR1：完成50道高考真题并正确率达到90%以上。\n' +
    '        *   KR2：能够独立向同学清晰讲解所有力学核心概念。\n' +
    '        *   KR3：在期末考试中，力学部分得分率达到95%以上。\n' +
    '    *   **例如（针对“流利地用英语进行日常对话”）：**\n' +
    '        *   KR1：每周参加3次英语角或线上交流，每次发言时间不低于10分钟。\n' +
    '        *   KR2：能够不卡顿地用英语完整讲述3个日常主题（如介绍家乡、未来规划、旅行经历）。\n' +
    '        *   KR3：掌握并熟练运用至少200个日常对话常用短语和句型。\n' +
    '\n' +
    '3.  **制定行动计划（为了实现KR的具体任务）**\n' +
    '    *   虽然OKR本身侧重目标和结果，但为了达成KR，我们还需要具体的行动。\n' +
    '    *   **思考一下：**\n' +
    '        *   “为了达成你的每个KR，你每天/每周需要做些什么具体的练习或学习任务？”\n' +
    '    *   **例如（针对物理KR1：完成50道高考真题并正确率达到90%以上）：**\n' +
    '        *   每天完成5道真题，并详细分析错题。\n' +
    '        *   每周至少进行一次专题复习，整理知识点和解题技巧。\n' +
    '\n' +
    '4.  **定期回顾与调整**\n' +
    '    *   OKR不是一成不变的，你需要定期（比如每周或每两周）检查进度，评估KR的完成情况。\n' +
    '    *   如果发现某些KR太难或太简单，可以灵活调整。\n' +
    '\n' +
    '---\n' +
    '\n' +
    '为了更好地帮助你，我们先从你的**“目标”（Objective）**开始吧！\n' +
    '\n' +
    '**你现在最想在哪方面取得突破呢？你想在这段时间内实现一个什么样的学习目标？**\n' +
    '\n' +
    '请告诉我你的想法，我来帮你完善！'
}
✅ 解析出的AI回复: 你好！我是启明星，很高兴能帮你开始制定你的学习OKR。

制定OKR（目标与关键结果）是提升学习效率和达成学习目标的绝佳方式！它能帮你清晰地规划学习路径。

我们可以一步步来。下面是制定OKR的核心步骤，我会引导你完成：

### 启明星的OKR定制指南

1.  **确定你的“目标”（Objective - O）**
    *   **这是什么？** 你最想在接下来一段时间（比如一个学期、一个月或一个项目周期）内达成的、具有挑战性且鼓舞人心的目标。它应该是一个定性的描述，明确指明方向。
    *   **思考一下：**
        *   “你最想在这段时间内，在哪个学科、哪项技能或哪个领域取得显著的突破？”
        *   “你希望自己达到一个什么样的状态？”
    *   **例如：** “深入掌握高中物理力学模块。” 或 “流利地用英语进行日常对话。”

2.  **设定“关键结果”（Key Results - KR）**
    *   **这是什么？** 衡量你的“目标”是否达成的具体、可量化的结果。每个Objective通常有2-5个KR。KR必须是数字或可明确判断的成果，而不是一个任务列表。
    *   **思考一下：**
        *   “你将如何衡量你的目标是否达成？”
        *   “哪些具体的数据、百分比或完成事项能证明你实现了你的Objective？”
        *   这些KR应该是有挑战性但又可能实现的。
    *   **例如（针对“深入掌握高中物理力学模块”）：**
        *   KR1：完成50道高考真题并正确率达到90%以上。
        *   KR2：能够独立向同学清晰讲解所有力学核心概念。
        *   KR3：在期末考试中，力学部分得分率达到95%以上。
    *   **例如（针对“流利地用英语进行日常对话”）：**
        *   KR1：每周参加3次英语角或线上交流，每次发言时间不低于10分钟。
        *   KR2：能够不卡顿地用英语完整讲述3个日常主题（如介绍家乡、未来规划、旅行经历）。
        *   KR3：掌握并熟练运用至少200个日常对话常用短语和句型。

3.  **制定行动计划（为了实现KR的具体任务）**
    *   虽然OKR本身侧重目标和结果，但为了达成KR，我们还需要具体的行动。
    *   **思考一下：**
        *   “为了达成你的每个KR，你每天/每周需要做些什么具体的练习或学习任务？”
    *   **例如（针对物理KR1：完成50道高考真题并正确率达到90%以上）：**
        *   每天完成5道真题，并详细分析错题。
        *   每周至少进行一次专题复习，整理知识点和解题技巧。

4.  **定期回顾与调整**
    *   OKR不是一成不变的，你需要定期（比如每周或每两周）检查进度，评估KR的完成情况。
    *   如果发现某些KR太难或太简单，可以灵活调整。

---

为了更好地帮助你，我们先从你的**“目标”（Objective）**开始吧！

**你现在最想在哪方面取得突破呢？你想在这段时间内实现一个什么样的学习目标？**

请告诉我你的想法，我来帮你完善！
✅ AI响应成功: 你好！我是启明星，很高兴能帮你开始制定你的学习OKR。

制定OKR（目标与关键结果）是提升学习效率和达成学习目标的绝佳方式！它能帮你清晰地规划学习路径。

我们可以一步步来。下面是制定OKR的核心步骤，我会引导你完成：

### 启明星的OKR定制指南

1.  **确定你的“目标”（Objective - O）**
    *   **这是什么？** 你最想在接下来一段时间（比如一个学期、一个月或一个项目周期）内达成的、具有挑战性且鼓舞人心的目标。它应该是一个定性的描述，明确指明方向。
    *   **思考一下：**
        *   “你最想在这段时间内，在哪个学科、哪项技能或哪个领域取得显著的突破？”
        *   “你希望自己达到一个什么样的状态？”
    *   **例如：** “深入掌握高中物理力学模块。” 或 “流利地用英语进行日常对话。”

2.  **设定“关键结果”（Key Results - KR）**
    *   **这是什么？** 衡量你的“目标”是否达成的具体、可量化的结果。每个Objective通常有2-5个KR。KR必须是数字或可明确判断的成果，而不是一个任务列表。
    *   **思考一下：**
        *   “你将如何衡量你的目标是否达成？”
        *   “哪些具体的数据、百分比或完成事项能证明你实现了你的Objective？”
        *   这些KR应该是有挑战性但又可能实现的。
    *   **例如（针对“深入掌握高中物理力学模块”）：**
        *   KR1：完成50道高考真题并正确率达到90%以上。
        *   KR2：能够独立向同学清晰讲解所有力学核心概念。
        *   KR3：在期末考试中，力学部分得分率达到95%以上。
    *   **例如（针对“流利地用英语进行日常对话”）：**
        *   KR1：每周参加3次英语角或线上交流，每次发言时间不低于10分钟。
        *   KR2：能够不卡顿地用英语完整讲述3个日常主题（如介绍家乡、未来规划、旅行经历）。
        *   KR3：掌握并熟练运用至少200个日常对话常用短语和句型。

3.  **制定行动计划（为了实现KR的具体任务）**
    *   虽然OKR本身侧重目标和结果，但为了达成KR，我们还需要具体的行动。
    *   **思考一下：**
        *   “为了达成你的每个KR，你每天/每周需要做些什么具体的练习或学习任务？”
    *   **例如（针对物理KR1：完成50道高考真题并正确率达到90%以上）：**
        *   每天完成5道真题，并详细分析错题。
        *   每周至少进行一次专题复习，整理知识点和解题技巧。

4.  **定期回顾与调整**
    *   OKR不是一成不变的，你需要定期（比如每周或每两周）检查进度，评估KR的完成情况。
    *   如果发现某些KR太难或太简单，可以灵活调整。

---

为了更好地帮助你，我们先从你的**“目标”（Objective）**开始吧！

**你现在最想在哪方面取得突破呢？你想在这段时间内实现一个什么样的学习目标？**

请告诉我你的想法，我来帮你完善！
 POST /api/ai-chat 200 in 15499ms
 ✓ Compiled in 486ms (466 modules)
 GET /dashboard/student 200 in 345ms
 ✓ Compiled in 424ms (466 modules)
 GET /dashboard/student 200 in 52ms
 ✓ Compiled in 342ms (466 modules)
 GET /dashboard/student 200 in 46ms
 ✓ Compiled in 358ms (466 modules)
 GET /dashboard/student 200 in 77ms
 ✓ Compiled in 282ms (466 modules)
 GET /dashboard/student 200 in 282ms
 ✓ Compiled in 347ms (466 modules)
 GET /dashboard/student 200 in 57ms
 ✓ Compiled in 288ms (466 modules)
 GET /dashboard/student 200 in 87ms
 ✓ Compiled in 321ms (466 modules)
 GET /dashboard/student 200 in 336ms
 ✓ Compiled in 438ms (466 modules)
 GET /dashboard/student 200 in 50ms
 ✓ Compiled in 348ms (466 modules)
 GET /dashboard/student 200 in 347ms
 ✓ Compiled in 419ms (466 modules)
 GET /dashboard/student 200 in 48ms
 ✓ Compiled in 247ms (466 modules)
 GET /dashboard/student 200 in 41ms
 ✓ Compiled in 373ms (466 modules)
 GET /dashboard/student 200 in 90ms
 ✓ Compiled in 323ms (466 modules)
 ✓ Compiled in 296ms (466 modules)
 GET / 200 in 88ms
 GET /login 200 in 44ms
 GET /dashboard/student 200 in 30ms
🚀 AI Chat API 被调用
📤 收到请求: { message: '你好', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '你好',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:50:14.777Z' }
}
N8N webhook调用异常: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.253.35.19:443, 47.89.186.110:443, 47.89.135.118:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
AI服务请求失败: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.253.35.19:443, 47.89.186.110:443, 47.89.135.118:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
❌ AI Chat API 错误: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.253.35.19:443, 47.89.186.110:443, 47.89.135.118:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 POST /api/ai-chat 500 in 10975ms
 GET /dashboard/student 200 in 56ms
 GET /login 200 in 43ms
 GET /login 200 in 27ms
 GET /login 200 in 103ms
 GET /login 200 in 61ms
 GET /dashboard/student 200 in 28ms
🚀 AI Chat API 被调用
📤 收到请求: { message: '你好', sessionType: 'general' }
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '你好',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:52:37.266Z' }
}
N8N webhook调用异常: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.89.186.110:443, 47.253.35.19:443, 47.89.135.118:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
AI服务请求失败: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.89.186.110:443, 47.253.35.19:443, 47.89.135.118:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
❌ AI Chat API 错误: TypeError: fetch failed
    at async AIServiceManager.callN8nWebhook (src\lib\ai-service-manager.ts:96:24)
    at async AIServiceManager.sendAIRequest (src\lib\ai-service-manager.ts:48:22)
    at async POST (src\app\api\ai-chat\route.ts:26:24)
  94 |       console.log('📤 请求数据:', n8nRequest)
  95 |
> 96 |       const response = await fetch(this.config.webhookUrl, {
     |                        ^
  97 |         method: 'POST',
  98 |         headers: {
  99 |           'Content-Type': 'application/json; charset=utf-8', {
  [cause]: [Error [ConnectTimeoutError]: Connect Timeout Error (attempted addresses: 47.90.209.144:443, 47.89.186.110:443, 47.253.35.19:443, 47.89.135.118:443, 47.90.173.78:443, timeout: 10000ms)] {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 POST /api/ai-chat 500 in 10875ms
 ✓ Compiled in 970ms (1037 modules)
 GET /dashboard/student 200 in 256ms
 ✓ Compiled in 768ms (1016 modules)
 GET /dashboard/student 200 in 331ms
 ✓ Compiled in 1213ms (1016 modules)
 GET /dashboard/student 200 in 122ms
 GET /dashboard/student 200 in 410ms
 GET /login 200 in 73ms
 GET /login 200 in 38ms
 ✓ Compiled / in 128ms (555 modules)
 GET / 200 in 378ms
 GET /login 200 in 80ms
 GET /dashboard/student 200 in 45ms
 ✓ Compiled /api/ai-chat in 240ms (576 modules)
🌍 环境变量调试: { AI_PROVIDER: 'n8n', AI_WEBHOOK_URL: '已配置', AI_TIMEOUT: '30000' }
🚀 AI Chat API 被调用
📤 收到请求: { message: '123456', sessionType: 'general' }
🔧 AI服务管理器初始化配置: {
  provider: 'n8n',
  webhookUrl: '已配置',
  hasApiKey: false,
  timeout: 30000
}
🔄 尝试第 1 次连接AI服务
🚀 调用N8N工作流: https://n8n-vdarinvh.us-east-1.clawcloudrun.com/webhook/21e98a9d-e00b-42e7-a224-37c14f335815
📤 请求数据: {
  userMessage: '123456',
  userId: undefined,
  sessionId: undefined,
  sessionType: 'general',
  userProfile: undefined,
  conversationHistory: [],
  metadata: { platform: 'qiming-star', timestamp: '2025-08-27T13:55:19.949Z' }
}
 GET /dashboard/student 200 in 257ms
📊 N8N响应状态: 200
📥 N8N原始响应: {"responds":"你好！我是启明星，你的专属AI学习助手。\n\n我在这里帮你制定并达成学习目标（OKR），以及解答你学习中遇到的知识问题。\n\n请尽管提出你的问题或目标，我将竭诚为你服务。"}
📥 N8N解析后数据: {
  responds: '你好！我是启明星，你的专属AI学习助手。\n' +
    '\n' +
    '我在这里帮你制定并达成学习目标（OKR），以及解答你学习中遇到的知识问题。\n' +
    '\n' +
    '请尽管提出你的问题或目标，我将竭诚为你服务。'
}
🔍 解析N8N响应: {
  responds: '你好！我是启明星，你的专属AI学习助手。\n' +
    '\n' +
    '我在这里帮你制定并达成学习目标（OKR），以及解答你学习中遇到的知识问题。\n' +
    '\n' +
    '请尽管提出你的问题或目标，我将竭诚为你服务。'
}
✅ 解析出的AI回复: 你好！我是启明星，你的专属AI学习助手。

我在这里帮你制定并达成学习目标（OKR），以及解答你学习中遇到的知识问题。

请尽管提出你的问题或目标，我将竭诚为你服务。
✅ AI服务连接成功，用时 7301ms
✅ AI响应成功: 你好！我是启明星，你的专属AI学习助手。

我在这里帮你制定并达成学习目标（OKR），以及解答你学习中遇到的知识问题。

请尽管提出你的问题或目标，我将竭诚为你服务。
 POST /api/ai-chat 200 in 7726ms
